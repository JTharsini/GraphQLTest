IDE: VSCode

1. initializing new node js project: (creates a package.json)
npm init
2. install apollo-server along with graphql support:
npm install apollo-server graphql
3. install nodemon to have hot deployment:
npm install nodemon
4. npm start should execute index.js covered by nodemon:
add "start": "nodemon index.js" in package.json
5. add index.js
6. npm start : to start app
7. Apollo GraphQL extension for IDE: highlighting graphql

project structure:
-add schema folder: to keep type

- http://localhost:4000/ in browser: can see server once npm start without crashes
- apollo-server has built-in api tester ("Query your server" button)
-in explorer gives the result:

query GetAllUsers {
  users {
    name
    username
  }
}

-If one of the FakeData's mandatory field is null and requesting for that data ==> the query fails
-After change nationality to Enum (if nationality is non capital ==> error)
-friends is not mandatory field. Then it can be null in the data.
query GetAllUsers {
  users {
    name
    username
    nationality
    friends {
      id
      name
    }
  }
}
-parent not used. Then replace it with _
user: (parent, args) => {
      const id = args.id;
      const user = _.find(UserList, {id: id})
      return user;
    }
==> 
    user: (_, args) => {
      const id = args.id;
      const user = _.find(UserList, {id: id})
      return user;
    }
Install lodash: npm install lodash
- {id: id} ==> {id} (since key and value are same name (by JS)
Comment in GraphQL: #
---------------------------
query GetUser($userId: ID!)
{
	user(id: $userId) {
		name
		username
		friends {
		  name
		}
	}
}

{
  "userId": 1
}

is error. because, ID should be either number or string. But when resolvers receive the variable, it receive it as string.
No match in lodash ==> id: Number(id) should be used.
-users(){
      return UserList;
    }
is same as
    users: () => {
      return UserList;
    }
-